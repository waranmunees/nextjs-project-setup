{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,2NAAA,CAAA,kBAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;MAxBS;AA0BT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,qKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;AAIT;MAjCS;AAmCT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6aACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,2MAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;AAGjC;MAtBS;AAwBT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,6LAAC,qKAAA,CAAA,YAAyB;QACxB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,6LAAC,qKAAA,CAAA,iBAA8B;QAC7B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uNAAA,CAAA,gBAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;MAhBS;AAkBT,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,6LAAC,qKAAA,CAAA,mBAAgC;QAC/B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,2NAAA,CAAA,kBAAe;YAAC,WAAU;;;;;;;;;;;AAGjC;MAhBS","debugId":null}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 843, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/StudentManagement.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\n\ninterface Student {\n  id: string\n  name: string\n  age: number\n  registerNumber: string\n  rollNumber: string\n  year: '1st Year' | '2nd Year' | '3rd Year'\n  class: string\n  status: 'Day Scholar' | 'Hosteller'\n}\n\nexport default function StudentManagement() {\n  const [students, setStudents] = useState<Student[]>([])\n  const [filteredStudents, setFilteredStudents] = useState<Student[]>([])\n  const [selectedYear, setSelectedYear] = useState<string>('all')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false)\n  const [newStudent, setNewStudent] = useState<Partial<Student>>({\n    name: '',\n    age: 18,\n    registerNumber: '',\n    rollNumber: '',\n    year: '1st Year',\n    class: 'B.Sc Computer Science',\n    status: 'Day Scholar'\n  })\n\n  // Sample data\n  useEffect(() => {\n    const sampleStudents: Student[] = [\n      {\n        id: '1',\n        name: 'John Doe',\n        age: 20,\n        registerNumber: 'R001',\n        rollNumber: '01',\n        year: '1st Year',\n        class: 'B.Sc Computer Science',\n        status: 'Day Scholar'\n      },\n      {\n        id: '2',\n        name: 'Jane Smith',\n        age: 21,\n        registerNumber: 'R002',\n        rollNumber: '02',\n        year: '2nd Year',\n        class: 'B.Sc Computer Science',\n        status: 'Hosteller'\n      },\n      {\n        id: '3',\n        name: 'Mike Johnson',\n        age: 22,\n        registerNumber: 'R003',\n        rollNumber: '03',\n        year: '3rd Year',\n        class: 'B.Sc Computer Science',\n        status: 'Day Scholar'\n      },\n      {\n        id: '4',\n        name: 'Sarah Wilson',\n        age: 19,\n        registerNumber: 'R004',\n        rollNumber: '04',\n        year: '1st Year',\n        class: 'B.Sc Computer Science',\n        status: 'Hosteller'\n      },\n      {\n        id: '5',\n        name: 'David Brown',\n        age: 20,\n        registerNumber: 'R005',\n        rollNumber: '05',\n        year: '2nd Year',\n        class: 'B.Sc Computer Science',\n        status: 'Day Scholar'\n      },\n      {\n        id: '6',\n        name: 'Emily Davis',\n        age: 21,\n        registerNumber: 'R006',\n        rollNumber: '06',\n        year: '3rd Year',\n        class: 'B.Sc Computer Science',\n        status: 'Hosteller'\n      }\n    ]\n    setStudents(sampleStudents)\n    setFilteredStudents(sampleStudents)\n  }, [])\n\n  // Filter students based on year and search term\n  useEffect(() => {\n    let filtered = students\n\n    if (selectedYear !== 'all') {\n      filtered = filtered.filter(student => student.year === selectedYear)\n    }\n\n    if (searchTerm) {\n      filtered = filtered.filter(student =>\n        student.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        student.rollNumber.includes(searchTerm) ||\n        student.registerNumber.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    }\n\n    setFilteredStudents(filtered)\n  }, [students, selectedYear, searchTerm])\n\n  const handleAddStudent = () => {\n    if (newStudent.name && newStudent.registerNumber && newStudent.rollNumber) {\n      const student: Student = {\n        id: Date.now().toString(),\n        name: newStudent.name!,\n        age: newStudent.age || 18,\n        registerNumber: newStudent.registerNumber!,\n        rollNumber: newStudent.rollNumber!,\n        year: newStudent.year || '1st Year',\n        class: newStudent.class || 'B.Sc Computer Science',\n        status: newStudent.status || 'Day Scholar'\n      }\n      \n      setStudents([...students, student])\n      setNewStudent({\n        name: '',\n        age: 18,\n        registerNumber: '',\n        rollNumber: '',\n        year: '1st Year',\n        class: 'B.Sc Computer Science',\n        status: 'Day Scholar'\n      })\n      setIsAddDialogOpen(false)\n    }\n  }\n\n  const getYearStats = () => {\n    const stats = {\n      '1st Year': students.filter(s => s.year === '1st Year').length,\n      '2nd Year': students.filter(s => s.year === '2nd Year').length,\n      '3rd Year': students.filter(s => s.year === '3rd Year').length,\n      'Day Scholar': students.filter(s => s.status === 'Day Scholar').length,\n      'Hosteller': students.filter(s => s.status === 'Hosteller').length\n    }\n    return stats\n  }\n\n  const stats = getYearStats()\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold text-purple-800 mb-2\">Student Management</h2>\n        <p className=\"text-purple-600\">Manage student information by academic year</p>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{students.length}</p>\n            <p className=\"text-sm opacity-90\">Total Students</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{filteredStudents.length}</p>\n            <p className=\"text-sm opacity-90\">Filtered Results</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Year Distribution */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-purple-800\">Year Distribution</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-3 gap-4 mb-4\">\n            <div className=\"text-center\">\n              <p className=\"text-xl font-bold text-purple-600\">{stats['1st Year']}</p>\n              <p className=\"text-sm text-gray-600\">1st Year</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-xl font-bold text-purple-600\">{stats['2nd Year']}</p>\n              <p className=\"text-sm text-gray-600\">2nd Year</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-xl font-bold text-purple-600\">{stats['3rd Year']}</p>\n              <p className=\"text-sm text-gray-600\">3rd Year</p>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center\">\n              <p className=\"text-lg font-semibold text-blue-600\">{stats['Day Scholar']}</p>\n              <p className=\"text-sm text-gray-600\">Day Scholars</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-lg font-semibold text-orange-600\">{stats['Hosteller']}</p>\n              <p className=\"text-sm text-gray-600\">Hostellers</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Filters and Add Button */}\n      <div className=\"space-y-4\">\n        <div className=\"flex space-x-2\">\n          <Select value={selectedYear} onValueChange={setSelectedYear}>\n            <SelectTrigger className=\"flex-1\">\n              <SelectValue placeholder=\"Filter by year\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Years</SelectItem>\n              <SelectItem value=\"1st Year\">1st Year</SelectItem>\n              <SelectItem value=\"2nd Year\">2nd Year</SelectItem>\n              <SelectItem value=\"3rd Year\">3rd Year</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>\n            <DialogTrigger asChild>\n              <Button className=\"bg-purple-600 hover:bg-purple-700\">\n                Add Student\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"max-w-md\">\n              <DialogHeader>\n                <DialogTitle>Add New Student</DialogTitle>\n                <DialogDescription>\n                  Enter student information below\n                </DialogDescription>\n              </DialogHeader>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"name\">Name</Label>\n                  <Input\n                    id=\"name\"\n                    value={newStudent.name || ''}\n                    onChange={(e) => setNewStudent({...newStudent, name: e.target.value})}\n                    placeholder=\"Student name\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"age\">Age</Label>\n                  <Input\n                    id=\"age\"\n                    type=\"number\"\n                    value={newStudent.age || 18}\n                    onChange={(e) => setNewStudent({...newStudent, age: parseInt(e.target.value)})}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"registerNumber\">Register Number</Label>\n                  <Input\n                    id=\"registerNumber\"\n                    value={newStudent.registerNumber || ''}\n                    onChange={(e) => setNewStudent({...newStudent, registerNumber: e.target.value})}\n                    placeholder=\"R007\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"rollNumber\">Roll Number</Label>\n                  <Input\n                    id=\"rollNumber\"\n                    value={newStudent.rollNumber || ''}\n                    onChange={(e) => setNewStudent({...newStudent, rollNumber: e.target.value})}\n                    placeholder=\"07\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"year\">Year</Label>\n                  <Select value={newStudent.year} onValueChange={(value) => setNewStudent({...newStudent, year: value as any})}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"1st Year\">1st Year</SelectItem>\n                      <SelectItem value=\"2nd Year\">2nd Year</SelectItem>\n                      <SelectItem value=\"3rd Year\">3rd Year</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"status\">Status</Label>\n                  <Select value={newStudent.status} onValueChange={(value) => setNewStudent({...newStudent, status: value as any})}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Day Scholar\">Day Scholar</SelectItem>\n                      <SelectItem value=\"Hosteller\">Hosteller</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <Button onClick={handleAddStudent} className=\"w-full bg-purple-600 hover:bg-purple-700\">\n                  Add Student\n                </Button>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n\n        <Input\n          placeholder=\"Search by name, roll number, or register number...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"w-full\"\n        />\n      </div>\n\n      {/* Student List */}\n      <div className=\"space-y-3\">\n        {filteredStudents.map((student, index) => (\n          <Card\n            key={student.id}\n            className=\"shadow-md hover:shadow-lg transition-all duration-300 transform hover:scale-102 animate-fade-in\"\n            style={{ animationDelay: `${index * 0.1}s` }}\n          >\n            <CardContent className=\"p-4\">\n              <div className=\"flex justify-between items-start mb-3\">\n                <div>\n                  <h3 className=\"font-semibold text-lg text-gray-800\">{student.name}</h3>\n                  <p className=\"text-sm text-gray-600\">Age: {student.age}</p>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <Badge className={`${\n                    student.year === '1st Year' ? 'bg-green-100 text-green-800' :\n                    student.year === '2nd Year' ? 'bg-blue-100 text-blue-800' :\n                    'bg-purple-100 text-purple-800'\n                  }`}>\n                    {student.year}\n                  </Badge>\n                  <Badge className={`${\n                    student.status === 'Day Scholar' ? 'bg-blue-100 text-blue-800' : 'bg-orange-100 text-orange-800'\n                  }`}>\n                    {student.status}\n                  </Badge>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <p className=\"text-gray-600\">Register No:</p>\n                  <p className=\"font-medium\">{student.registerNumber}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-600\">Roll No:</p>\n                  <p className=\"font-medium\">{student.rollNumber}</p>\n                </div>\n              </div>\n              \n              <div className=\"mt-3\">\n                <p className=\"text-gray-600 text-sm\">Class:</p>\n                <p className=\"font-medium text-sm\">{student.class}</p>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {filteredStudents.length === 0 && (\n        <Card className=\"text-center py-8\">\n          <CardContent>\n            <p className=\"text-gray-500\">No students found matching your criteria</p>\n          </CardContent>\n        </Card>\n      )}\n\n      <style jsx global>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.5s ease-out both;\n        }\n        \n        .hover\\\\:scale-102:hover {\n          transform: scale(1.02);\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1928, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 1970, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: React.ComponentProps<typeof DayPicker>) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row gap-2\",\n        month: \"flex flex-col gap-4\",\n        caption: \"flex justify-center pt-1 relative items-center w-full\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"flex items-center gap-1\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"size-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-x-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"size-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start:\n          \"day-range-start aria-selected:bg-primary aria-selected:text-primary-foreground\",\n        day_range_end:\n          \"day-range-end aria-selected:bg-primary aria-selected:text-primary-foreground\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"size-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"size-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AASA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACoC;IACvC,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACL,mKACA,MAAM,IAAI,KAAK,UACX,yKACA;YAEN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,iBACE;YACF,eACE;YACF,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;YAE5D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;QAE/D;QACC,GAAG,KAAK;;;;;;AAGf;KA/DS","debugId":null}},
    {"offset": {"line": 2056, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  )\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,QAAQ,EACf,GAAG,OACgD;IACnD,qBAAO,6LAAC,sKAAA,CAAA,OAAqB;QAAC,aAAU;QAAW,GAAG,KAAK;;;;;;AAC7D;KAJS;AAMT,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,6LAAC,sKAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;MAJS;AAMT,SAAS,eAAe,EACtB,SAAS,EACT,QAAQ,QAAQ,EAChB,aAAa,CAAC,EACd,GAAG,OACmD;IACtD,qBACE,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,aAAU;YACV,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,keACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIjB;MApBS;AAsBT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,sKAAA,CAAA,SAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS","debugId":null}},
    {"offset": {"line": 2137, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AttendanceSystem.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Switch } from '@/components/ui/switch'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Calendar } from '@/components/ui/calendar'\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\n\ninterface Student {\n  id: string\n  name: string\n  rollNumber: string\n  year: string\n  isPresent: boolean\n}\n\ninterface AttendanceRecord {\n  date: string\n  classType: string\n  presentCount: number\n  totalCount: number\n  students: { id: string; name: string; rollNumber: string; isPresent: boolean }[]\n}\n\nexport default function AttendanceSystem() {\n  const [students, setStudents] = useState<Student[]>([])\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date())\n  const [selectedClass, setSelectedClass] = useState('Computer Science - Theory')\n  const [attendanceRecords, setAttendanceRecords] = useState<AttendanceRecord[]>([])\n  const [isSaving, setIsSaving] = useState(false)\n  const [showHistory, setShowHistory] = useState(false)\n\n  // Sample students data\n  useEffect(() => {\n    const sampleStudents: Student[] = [\n      { id: '1', name: 'John Doe', rollNumber: '01', year: '1st Year', isPresent: true },\n      { id: '2', name: 'Jane Smith', rollNumber: '02', year: '2nd Year', isPresent: true },\n      { id: '3', name: 'Mike Johnson', rollNumber: '03', year: '3rd Year', isPresent: false },\n      { id: '4', name: 'Sarah Wilson', rollNumber: '04', year: '1st Year', isPresent: true },\n      { id: '5', name: 'David Brown', rollNumber: '05', year: '2nd Year', isPresent: true },\n      { id: '6', name: 'Emily Davis', rollNumber: '06', year: '3rd Year', isPresent: false },\n      { id: '7', name: 'Alex Turner', rollNumber: '07', year: '1st Year', isPresent: true },\n      { id: '8', name: 'Lisa Chen', rollNumber: '08', year: '2nd Year', isPresent: true },\n    ]\n    setStudents(sampleStudents)\n\n    // Load sample attendance records\n    const sampleRecords: AttendanceRecord[] = [\n      {\n        date: new Date(Date.now() - 86400000).toISOString().split('T')[0], // Yesterday\n        classType: 'Computer Science - Theory',\n        presentCount: 6,\n        totalCount: 8,\n        students: sampleStudents.map(s => ({ ...s, isPresent: Math.random() > 0.3 }))\n      },\n      {\n        date: new Date(Date.now() - 172800000).toISOString().split('T')[0], // 2 days ago\n        classType: 'Computer Science - Lab',\n        presentCount: 7,\n        totalCount: 8,\n        students: sampleStudents.map(s => ({ ...s, isPresent: Math.random() > 0.2 }))\n      }\n    ]\n    setAttendanceRecords(sampleRecords)\n  }, [])\n\n  const toggleAttendance = (studentId: string) => {\n    setStudents(students.map(student =>\n      student.id === studentId\n        ? { ...student, isPresent: !student.isPresent }\n        : student\n    ))\n  }\n\n  const markAllPresent = () => {\n    setStudents(students.map(student => ({ ...student, isPresent: true })))\n  }\n\n  const markAllAbsent = () => {\n    setStudents(students.map(student => ({ ...student, isPresent: false })))\n  }\n\n  const saveAttendance = async () => {\n    setIsSaving(true)\n    \n    // Simulate API call\n    setTimeout(() => {\n      const newRecord: AttendanceRecord = {\n        date: selectedDate.toISOString().split('T')[0],\n        classType: selectedClass,\n        presentCount: students.filter(s => s.isPresent).length,\n        totalCount: students.length,\n        students: students.map(s => ({\n          id: s.id,\n          name: s.name,\n          rollNumber: s.rollNumber,\n          isPresent: s.isPresent\n        }))\n      }\n      \n      setAttendanceRecords([newRecord, ...attendanceRecords])\n      setIsSaving(false)\n      \n      // Show success message (you could use a toast here)\n      alert('Attendance saved successfully!')\n    }, 1000)\n  }\n\n  const getPresentCount = () => students.filter(s => s.isPresent).length\n  const getAttendancePercentage = () => Math.round((getPresentCount() / students.length) * 100)\n\n  const formatDate = (date: Date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })\n  }\n\n  if (showHistory) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-purple-800\">Attendance History</h2>\n            <p className=\"text-purple-600\">View past attendance records</p>\n          </div>\n          <Button\n            onClick={() => setShowHistory(false)}\n            variant=\"outline\"\n            className=\"border-purple-300 text-purple-700\"\n          >\n            Back to Current\n          </Button>\n        </div>\n\n        <div className=\"space-y-4\">\n          {attendanceRecords.map((record, index) => (\n            <Card key={index} className=\"shadow-md\">\n              <CardHeader>\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <CardTitle className=\"text-lg\">{record.classType}</CardTitle>\n                    <CardDescription>{new Date(record.date).toLocaleDateString()}</CardDescription>\n                  </div>\n                  <Badge className={`${\n                    (record.presentCount / record.totalCount) >= 0.8 \n                      ? 'bg-green-100 text-green-800' \n                      : (record.presentCount / record.totalCount) >= 0.6\n                      ? 'bg-yellow-100 text-yellow-800'\n                      : 'bg-red-100 text-red-800'\n                  }`}>\n                    {Math.round((record.presentCount / record.totalCount) * 100)}%\n                  </Badge>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <span className=\"text-sm text-gray-600\">\n                    Present: {record.presentCount} / {record.totalCount}\n                  </span>\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-2\">\n                  {record.students.map((student) => (\n                    <div\n                      key={student.id}\n                      className={`p-2 rounded text-sm ${\n                        student.isPresent \n                          ? 'bg-green-50 text-green-800 border border-green-200' \n                          : 'bg-red-50 text-red-800 border border-red-200'\n                      }`}\n                    >\n                      <div className=\"flex justify-between\">\n                        <span>{student.name}</span>\n                        <span className=\"font-mono\">{student.rollNumber}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {attendanceRecords.length === 0 && (\n          <Card className=\"text-center py-8\">\n            <CardContent>\n              <p className=\"text-gray-500\">No attendance records found</p>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold text-purple-800 mb-2\">Attendance System</h2>\n        <p className=\"text-purple-600\">Mark student attendance for today's class</p>\n      </div>\n\n      {/* Date and Class Selection */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-purple-800\">Class Details</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <label className=\"text-sm font-medium text-gray-700 mb-2 block\">Date</label>\n            <Popover>\n              <PopoverTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full justify-start text-left\">\n                  {formatDate(selectedDate)}\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"w-auto p-0\">\n                <Calendar\n                  mode=\"single\"\n                  selected={selectedDate}\n                  onSelect={(date) => date && setSelectedDate(date)}\n                  initialFocus\n                />\n              </PopoverContent>\n            </Popover>\n          </div>\n          \n          <div>\n            <label className=\"text-sm font-medium text-gray-700 mb-2 block\">Class Type</label>\n            <Select value={selectedClass} onValueChange={setSelectedClass}>\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"Computer Science - Theory\">Computer Science - Theory</SelectItem>\n                <SelectItem value=\"Computer Science - Lab\">Computer Science - Lab</SelectItem>\n                <SelectItem value=\"Mathematics\">Mathematics</SelectItem>\n                <SelectItem value=\"Physics\">Physics</SelectItem>\n                <SelectItem value=\"Chemistry\">Chemistry</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Attendance Summary */}\n      <div className=\"grid grid-cols-3 gap-4\">\n        <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{getPresentCount()}</p>\n            <p className=\"text-sm opacity-90\">Present</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-gradient-to-r from-red-500 to-red-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{students.length - getPresentCount()}</p>\n            <p className=\"text-sm opacity-90\">Absent</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-gradient-to-r from-purple-500 to-purple-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{getAttendancePercentage()}%</p>\n            <p className=\"text-sm opacity-90\">Attendance</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"flex space-x-2\">\n        <Button\n          onClick={markAllPresent}\n          className=\"flex-1 bg-green-600 hover:bg-green-700\"\n        >\n          Mark All Present\n        </Button>\n        <Button\n          onClick={markAllAbsent}\n          variant=\"outline\"\n          className=\"flex-1 border-red-300 text-red-700 hover:bg-red-50\"\n        >\n          Mark All Absent\n        </Button>\n      </div>\n\n      {/* Student List */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <CardTitle className=\"text-purple-800\">Student List</CardTitle>\n            <Button\n              onClick={() => setShowHistory(true)}\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"border-purple-300 text-purple-700\"\n            >\n              View History\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {students.map((student, index) => (\n            <div\n              key={student.id}\n              className={`flex items-center justify-between p-4 rounded-lg border-2 transition-all duration-300 animate-fade-in ${\n                student.isPresent\n                  ? 'border-green-200 bg-green-50'\n                  : 'border-red-200 bg-red-50'\n              }`}\n              style={{ animationDelay: `${index * 0.1}s` }}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${\n                    student.isPresent ? 'bg-green-500' : 'bg-red-500'\n                  }`}></div>\n                  <div>\n                    <p className=\"font-medium text-gray-800\">{student.name}</p>\n                    <p className=\"text-sm text-gray-600\">\n                      Roll: {student.rollNumber} • {student.year}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-3\">\n                <Badge className={`${\n                  student.isPresent \n                    ? 'bg-green-100 text-green-800' \n                    : 'bg-red-100 text-red-800'\n                }`}>\n                  {student.isPresent ? 'Present' : 'Absent'}\n                </Badge>\n                <Switch\n                  checked={student.isPresent}\n                  onCheckedChange={() => toggleAttendance(student.id)}\n                  className=\"data-[state=checked]:bg-green-600\"\n                />\n              </div>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      {/* Save Button */}\n      <Button\n        onClick={saveAttendance}\n        disabled={isSaving}\n        className=\"w-full h-12 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white font-semibold shadow-lg\"\n      >\n        {isSaving ? (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n            <span>Saving Attendance...</span>\n          </div>\n        ) : (\n          'Save Attendance'\n        )}\n      </Button>\n\n      <style jsx global>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.5s ease-out both;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3057, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 3102, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 3133, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AssignmentTracker.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Progress } from '@/components/ui/progress'\nimport { Textarea } from '@/components/ui/textarea'\n\ninterface Assignment {\n  id: string\n  title: string\n  description: string\n  dueDate: string\n  createdDate: string\n  submissions: StudentSubmission[]\n}\n\ninterface StudentSubmission {\n  studentId: string\n  studentName: string\n  rollNumber: string\n  isSubmitted: boolean\n  submissionDate?: string\n  grade?: number\n  feedback?: string\n}\n\nexport default function AssignmentTracker() {\n  const [assignments, setAssignments] = useState<Assignment[]>([])\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false)\n  const [selectedAssignment, setSelectedAssignment] = useState<Assignment | null>(null)\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false)\n  const [newAssignment, setNewAssignment] = useState({\n    title: '',\n    description: '',\n    dueDate: ''\n  })\n\n  // Sample students for submissions\n  const sampleStudents = [\n    { id: '1', name: 'John Doe', rollNumber: '01' },\n    { id: '2', name: 'Jane Smith', rollNumber: '02' },\n    { id: '3', name: 'Mike Johnson', rollNumber: '03' },\n    { id: '4', name: 'Sarah Wilson', rollNumber: '04' },\n    { id: '5', name: 'David Brown', rollNumber: '05' },\n    { id: '6', name: 'Emily Davis', rollNumber: '06' },\n    { id: '7', name: 'Alex Turner', rollNumber: '07' },\n    { id: '8', name: 'Lisa Chen', rollNumber: '08' }\n  ]\n\n  useEffect(() => {\n    // Load sample assignments\n    const sampleAssignments: Assignment[] = [\n      {\n        id: '1',\n        title: 'Data Structures Implementation',\n        description: 'Implement basic data structures including Stack, Queue, and Linked List in your preferred programming language.',\n        dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 7 days from now\n        createdDate: new Date().toISOString().split('T')[0],\n        submissions: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber,\n          isSubmitted: Math.random() > 0.4,\n          submissionDate: Math.random() > 0.4 ? new Date(Date.now() - Math.random() * 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] : undefined,\n          grade: Math.random() > 0.4 ? Math.floor(Math.random() * 40) + 60 : undefined\n        }))\n      },\n      {\n        id: '2',\n        title: 'Database Design Project',\n        description: 'Design and implement a database schema for a library management system with proper normalization.',\n        dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 14 days from now\n        createdDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        submissions: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber,\n          isSubmitted: Math.random() > 0.6,\n          submissionDate: Math.random() > 0.6 ? new Date(Date.now() - Math.random() * 2 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] : undefined,\n          grade: Math.random() > 0.6 ? Math.floor(Math.random() * 35) + 65 : undefined\n        }))\n      },\n      {\n        id: '3',\n        title: 'Algorithm Analysis Report',\n        description: 'Write a comprehensive report analyzing the time and space complexity of sorting algorithms.',\n        dueDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 2 days ago (overdue)\n        createdDate: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        submissions: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber,\n          isSubmitted: Math.random() > 0.2,\n          submissionDate: Math.random() > 0.2 ? new Date(Date.now() - Math.random() * 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] : undefined,\n          grade: Math.random() > 0.2 ? Math.floor(Math.random() * 30) + 70 : undefined\n        }))\n      }\n    ]\n    setAssignments(sampleAssignments)\n  }, [])\n\n  const handleAddAssignment = () => {\n    if (newAssignment.title && newAssignment.dueDate) {\n      const assignment: Assignment = {\n        id: Date.now().toString(),\n        title: newAssignment.title,\n        description: newAssignment.description,\n        dueDate: newAssignment.dueDate,\n        createdDate: new Date().toISOString().split('T')[0],\n        submissions: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber,\n          isSubmitted: false\n        }))\n      }\n      \n      setAssignments([assignment, ...assignments])\n      setNewAssignment({ title: '', description: '', dueDate: '' })\n      setIsAddDialogOpen(false)\n    }\n  }\n\n  const toggleSubmission = (assignmentId: string, studentId: string) => {\n    setAssignments(assignments.map(assignment => {\n      if (assignment.id === assignmentId) {\n        return {\n          ...assignment,\n          submissions: assignment.submissions.map(submission => {\n            if (submission.studentId === studentId) {\n              return {\n                ...submission,\n                isSubmitted: !submission.isSubmitted,\n                submissionDate: !submission.isSubmitted ? new Date().toISOString().split('T')[0] : undefined\n              }\n            }\n            return submission\n          })\n        }\n      }\n      return assignment\n    }))\n  }\n\n  const getSubmissionStats = (assignment: Assignment) => {\n    const submitted = assignment.submissions.filter(s => s.isSubmitted).length\n    const total = assignment.submissions.length\n    const percentage = Math.round((submitted / total) * 100)\n    return { submitted, total, percentage }\n  }\n\n  const isOverdue = (dueDate: string) => {\n    return new Date(dueDate) < new Date()\n  }\n\n  const getDaysUntilDue = (dueDate: string) => {\n    const due = new Date(dueDate)\n    const now = new Date()\n    const diffTime = due.getTime() - now.getTime()\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n    return diffDays\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-purple-800\">Assignment Tracker</h2>\n          <p className=\"text-purple-600\">Manage assignments and track student submissions</p>\n        </div>\n        <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"bg-purple-600 hover:bg-purple-700\">\n              Add Assignment\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-md\">\n            <DialogHeader>\n              <DialogTitle>Create New Assignment</DialogTitle>\n              <DialogDescription>\n                Add a new assignment for students to complete\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"title\">Assignment Title</Label>\n                <Input\n                  id=\"title\"\n                  value={newAssignment.title}\n                  onChange={(e) => setNewAssignment({...newAssignment, title: e.target.value})}\n                  placeholder=\"Enter assignment title\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea\n                  id=\"description\"\n                  value={newAssignment.description}\n                  onChange={(e) => setNewAssignment({...newAssignment, description: e.target.value})}\n                  placeholder=\"Enter assignment description\"\n                  rows={3}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"dueDate\">Due Date</Label>\n                <Input\n                  id=\"dueDate\"\n                  type=\"date\"\n                  value={newAssignment.dueDate}\n                  onChange={(e) => setNewAssignment({...newAssignment, dueDate: e.target.value})}\n                />\n              </div>\n              <Button onClick={handleAddAssignment} className=\"w-full bg-purple-600 hover:bg-purple-700\">\n                Create Assignment\n              </Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Assignment Statistics */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{assignments.length}</p>\n            <p className=\"text-sm opacity-90\">Total Assignments</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{assignments.filter(a => isOverdue(a.dueDate)).length}</p>\n            <p className=\"text-sm opacity-90\">Overdue</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Assignment List */}\n      <div className=\"space-y-4\">\n        {assignments.map((assignment, index) => {\n          const stats = getSubmissionStats(assignment)\n          const daysUntilDue = getDaysUntilDue(assignment.dueDate)\n          const overdue = isOverdue(assignment.dueDate)\n          \n          return (\n            <Card\n              key={assignment.id}\n              className=\"shadow-md hover:shadow-lg transition-all duration-300 animate-fade-in\"\n              style={{ animationDelay: `${index * 0.1}s` }}\n            >\n              <CardHeader>\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-lg text-gray-800\">{assignment.title}</CardTitle>\n                    <CardDescription className=\"mt-1\">\n                      {assignment.description}\n                    </CardDescription>\n                  </div>\n                  <div className=\"flex flex-col items-end space-y-2\">\n                    <Badge className={`${\n                      overdue \n                        ? 'bg-red-100 text-red-800' \n                        : daysUntilDue <= 3 \n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-green-100 text-green-800'\n                    }`}>\n                      {overdue \n                        ? `Overdue by ${Math.abs(daysUntilDue)} days`\n                        : daysUntilDue === 0\n                        ? 'Due Today'\n                        : `${daysUntilDue} days left`\n                      }\n                    </Badge>\n                    <Badge className=\"bg-purple-100 text-purple-800\">\n                      {stats.percentage}% submitted\n                    </Badge>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n                      <span>Submission Progress</span>\n                      <span>{stats.submitted} / {stats.total}</span>\n                    </div>\n                    <Progress value={stats.percentage} className=\"h-2\" />\n                  </div>\n                  \n                  <div className=\"flex justify-between items-center text-sm text-gray-600\">\n                    <span>Due: {formatDate(assignment.dueDate)}</span>\n                    <span>Created: {formatDate(assignment.createdDate)}</span>\n                  </div>\n                  \n                  <Button\n                    onClick={() => {\n                      setSelectedAssignment(assignment)\n                      setIsViewDialogOpen(true)\n                    }}\n                    variant=\"outline\"\n                    className=\"w-full border-purple-300 text-purple-700 hover:bg-purple-50\"\n                  >\n                    View Submissions\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )\n        })}\n      </div>\n\n      {assignments.length === 0 && (\n        <Card className=\"text-center py-8\">\n          <CardContent>\n            <p className=\"text-gray-500\">No assignments created yet</p>\n            <p className=\"text-sm text-gray-400 mt-2\">Click \"Add Assignment\" to create your first assignment</p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* View Assignment Dialog */}\n      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>\n        <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>{selectedAssignment?.title}</DialogTitle>\n            <DialogDescription>\n              Student submission status and grades\n            </DialogDescription>\n          </DialogHeader>\n          \n          {selectedAssignment && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-3 gap-4 text-center\">\n                <div>\n                  <p className=\"text-2xl font-bold text-green-600\">\n                    {selectedAssignment.submissions.filter(s => s.isSubmitted).length}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">Submitted</p>\n                </div>\n                <div>\n                  <p className=\"text-2xl font-bold text-red-600\">\n                    {selectedAssignment.submissions.filter(s => !s.isSubmitted).length}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">Not Submitted</p>\n                </div>\n                <div>\n                  <p className=\"text-2xl font-bold text-purple-600\">\n                    {getSubmissionStats(selectedAssignment).percentage}%\n                  </p>\n                  <p className=\"text-sm text-gray-600\">Completion</p>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                {selectedAssignment.submissions.map((submission) => (\n                  <div\n                    key={submission.studentId}\n                    className={`flex items-center justify-between p-3 rounded-lg border ${\n                      submission.isSubmitted\n                        ? 'border-green-200 bg-green-50'\n                        : 'border-red-200 bg-red-50'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-3 h-3 rounded-full ${\n                        submission.isSubmitted ? 'bg-green-500' : 'bg-red-500'\n                      }`}></div>\n                      <div>\n                        <p className=\"font-medium\">{submission.studentName}</p>\n                        <p className=\"text-sm text-gray-600\">Roll: {submission.rollNumber}</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-3\">\n                      {submission.submissionDate && (\n                        <span className=\"text-xs text-gray-500\">\n                          {formatDate(submission.submissionDate)}\n                        </span>\n                      )}\n                      {submission.grade && (\n                        <Badge className=\"bg-blue-100 text-blue-800\">\n                          {submission.grade}/100\n                        </Badge>\n                      )}\n                      <Button\n                        size=\"sm\"\n                        variant={submission.isSubmitted ? \"outline\" : \"default\"}\n                        onClick={() => toggleSubmission(selectedAssignment.id, submission.studentId)}\n                        className={submission.isSubmitted \n                          ? \"border-red-300 text-red-700 hover:bg-red-50\" \n                          : \"bg-green-600 hover:bg-green-700\"\n                        }\n                      >\n                        {submission.isSubmitted ? 'Mark Unsubmitted' : 'Mark Submitted'}\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      <style jsx global>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.5s ease-out both;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4108, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/TestTracker.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Progress } from '@/components/ui/progress'\n\ninterface Test {\n  id: string\n  subject: string\n  title: string\n  date: string\n  maxMarks: number\n  duration: string\n  type: 'Quiz' | 'Mid-term' | 'Final' | 'Assignment Test'\n  studentMarks: StudentMark[]\n}\n\ninterface StudentMark {\n  studentId: string\n  studentName: string\n  rollNumber: string\n  marks?: number\n  grade?: string\n  remarks?: string\n}\n\nexport default function TestTracker() {\n  const [tests, setTests] = useState<Test[]>([])\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false)\n  const [selectedTest, setSelectedTest] = useState<Test | null>(null)\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false)\n  const [isGradingDialogOpen, setIsGradingDialogOpen] = useState(false)\n  const [newTest, setNewTest] = useState({\n    subject: 'Computer Science',\n    title: '',\n    date: '',\n    maxMarks: 100,\n    duration: '60',\n    type: 'Quiz' as const\n  })\n\n  // Sample students\n  const sampleStudents = [\n    { id: '1', name: 'John Doe', rollNumber: '01' },\n    { id: '2', name: 'Jane Smith', rollNumber: '02' },\n    { id: '3', name: 'Mike Johnson', rollNumber: '03' },\n    { id: '4', name: 'Sarah Wilson', rollNumber: '04' },\n    { id: '5', name: 'David Brown', rollNumber: '05' },\n    { id: '6', name: 'Emily Davis', rollNumber: '06' },\n    { id: '7', name: 'Alex Turner', rollNumber: '07' },\n    { id: '8', name: 'Lisa Chen', rollNumber: '08' }\n  ]\n\n  useEffect(() => {\n    // Load sample tests\n    const sampleTests: Test[] = [\n      {\n        id: '1',\n        subject: 'Computer Science',\n        title: 'Data Structures Quiz',\n        date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 3 days from now\n        maxMarks: 50,\n        duration: '45 minutes',\n        type: 'Quiz',\n        studentMarks: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber,\n          marks: Math.random() > 0.3 ? Math.floor(Math.random() * 20) + 30 : undefined,\n          grade: Math.random() > 0.3 ? getGrade(Math.floor(Math.random() * 20) + 30, 50) : undefined\n        }))\n      },\n      {\n        id: '2',\n        subject: 'Mathematics',\n        title: 'Calculus Mid-term',\n        date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 7 days from now\n        maxMarks: 100,\n        duration: '2 hours',\n        type: 'Mid-term',\n        studentMarks: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber,\n          marks: Math.random() > 0.5 ? Math.floor(Math.random() * 30) + 60 : undefined,\n          grade: Math.random() > 0.5 ? getGrade(Math.floor(Math.random() * 30) + 60, 100) : undefined\n        }))\n      },\n      {\n        id: '3',\n        subject: 'Computer Science',\n        title: 'Algorithm Analysis Test',\n        date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 5 days ago\n        maxMarks: 75,\n        duration: '90 minutes',\n        type: 'Assignment Test',\n        studentMarks: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber,\n          marks: Math.floor(Math.random() * 25) + 50,\n          grade: getGrade(Math.floor(Math.random() * 25) + 50, 75)\n        }))\n      }\n    ]\n    setTests(sampleTests)\n  }, [])\n\n  function getGrade(marks: number, maxMarks: number): string {\n    const percentage = (marks / maxMarks) * 100\n    if (percentage >= 90) return 'A+'\n    if (percentage >= 80) return 'A'\n    if (percentage >= 70) return 'B+'\n    if (percentage >= 60) return 'B'\n    if (percentage >= 50) return 'C+'\n    if (percentage >= 40) return 'C'\n    return 'F'\n  }\n\n  const handleAddTest = () => {\n    if (newTest.title && newTest.date) {\n      const test: Test = {\n        id: Date.now().toString(),\n        subject: newTest.subject,\n        title: newTest.title,\n        date: newTest.date,\n        maxMarks: newTest.maxMarks,\n        duration: newTest.duration + ' minutes',\n        type: newTest.type,\n        studentMarks: sampleStudents.map(student => ({\n          studentId: student.id,\n          studentName: student.name,\n          rollNumber: student.rollNumber\n        }))\n      }\n      \n      setTests([test, ...tests])\n      setNewTest({\n        subject: 'Computer Science',\n        title: '',\n        date: '',\n        maxMarks: 100,\n        duration: '60',\n        type: 'Quiz'\n      })\n      setIsAddDialogOpen(false)\n    }\n  }\n\n  const updateStudentMark = (testId: string, studentId: string, marks: number) => {\n    setTests(tests.map(test => {\n      if (test.id === testId) {\n        return {\n          ...test,\n          studentMarks: test.studentMarks.map(studentMark => {\n            if (studentMark.studentId === studentId) {\n              return {\n                ...studentMark,\n                marks,\n                grade: getGrade(marks, test.maxMarks)\n              }\n            }\n            return studentMark\n          })\n        }\n      }\n      return test\n    }))\n  }\n\n  const getTestStats = (test: Test) => {\n    const gradedStudents = test.studentMarks.filter(s => s.marks !== undefined)\n    const totalStudents = test.studentMarks.length\n    const averageMarks = gradedStudents.length > 0 \n      ? Math.round(gradedStudents.reduce((sum, s) => sum + (s.marks || 0), 0) / gradedStudents.length)\n      : 0\n    const highestMarks = gradedStudents.length > 0 \n      ? Math.max(...gradedStudents.map(s => s.marks || 0))\n      : 0\n    const lowestMarks = gradedStudents.length > 0 \n      ? Math.min(...gradedStudents.map(s => s.marks || 0))\n      : 0\n    \n    return {\n      gradedCount: gradedStudents.length,\n      totalCount: totalStudents,\n      averageMarks,\n      highestMarks,\n      lowestMarks,\n      gradingProgress: Math.round((gradedStudents.length / totalStudents) * 100)\n    }\n  }\n\n  const isUpcoming = (date: string) => {\n    return new Date(date) > new Date()\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  const getGradeDistribution = (test: Test) => {\n    const grades = test.studentMarks.filter(s => s.grade).map(s => s.grade!)\n    const distribution = {\n      'A+': grades.filter(g => g === 'A+').length,\n      'A': grades.filter(g => g === 'A').length,\n      'B+': grades.filter(g => g === 'B+').length,\n      'B': grades.filter(g => g === 'B').length,\n      'C+': grades.filter(g => g === 'C+').length,\n      'C': grades.filter(g => g === 'C').length,\n      'F': grades.filter(g => g === 'F').length\n    }\n    return distribution\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-purple-800\">Test Tracker</h2>\n          <p className=\"text-purple-600\">Schedule tests and manage student performance</p>\n        </div>\n        <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"bg-purple-600 hover:bg-purple-700\">\n              Schedule Test\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-md\">\n            <DialogHeader>\n              <DialogTitle>Schedule New Test</DialogTitle>\n              <DialogDescription>\n                Create a new test for students\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"subject\">Subject</Label>\n                <Select value={newTest.subject} onValueChange={(value) => setNewTest({...newTest, subject: value})}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Computer Science\">Computer Science</SelectItem>\n                    <SelectItem value=\"Mathematics\">Mathematics</SelectItem>\n                    <SelectItem value=\"Physics\">Physics</SelectItem>\n                    <SelectItem value=\"Chemistry\">Chemistry</SelectItem>\n                    <SelectItem value=\"English\">English</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div>\n                <Label htmlFor=\"title\">Test Title</Label>\n                <Input\n                  id=\"title\"\n                  value={newTest.title}\n                  onChange={(e) => setNewTest({...newTest, title: e.target.value})}\n                  placeholder=\"Enter test title\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"date\">Test Date</Label>\n                <Input\n                  id=\"date\"\n                  type=\"date\"\n                  value={newTest.date}\n                  onChange={(e) => setNewTest({...newTest, date: e.target.value})}\n                />\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"maxMarks\">Max Marks</Label>\n                  <Input\n                    id=\"maxMarks\"\n                    type=\"number\"\n                    value={newTest.maxMarks}\n                    onChange={(e) => setNewTest({...newTest, maxMarks: parseInt(e.target.value)})}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"duration\">Duration (min)</Label>\n                  <Input\n                    id=\"duration\"\n                    type=\"number\"\n                    value={newTest.duration}\n                    onChange={(e) => setNewTest({...newTest, duration: e.target.value})}\n                  />\n                </div>\n              </div>\n              <div>\n                <Label htmlFor=\"type\">Test Type</Label>\n                <Select value={newTest.type} onValueChange={(value) => setNewTest({...newTest, type: value as any})}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Quiz\">Quiz</SelectItem>\n                    <SelectItem value=\"Mid-term\">Mid-term</SelectItem>\n                    <SelectItem value=\"Final\">Final</SelectItem>\n                    <SelectItem value=\"Assignment Test\">Assignment Test</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <Button onClick={handleAddTest} className=\"w-full bg-purple-600 hover:bg-purple-700\">\n                Schedule Test\n              </Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Test Statistics */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{tests.length}</p>\n            <p className=\"text-sm opacity-90\">Total Tests</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{tests.filter(t => isUpcoming(t.date)).length}</p>\n            <p className=\"text-sm opacity-90\">Upcoming</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Test List */}\n      <div className=\"space-y-4\">\n        {tests.map((test, index) => {\n          const stats = getTestStats(test)\n          const upcoming = isUpcoming(test.date)\n          \n          return (\n            <Card\n              key={test.id}\n              className=\"shadow-md hover:shadow-lg transition-all duration-300 animate-fade-in\"\n              style={{ animationDelay: `${index * 0.1}s` }}\n            >\n              <CardHeader>\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <CardTitle className=\"text-lg text-gray-800\">{test.title}</CardTitle>\n                      <Badge className={`${\n                        test.type === 'Quiz' ? 'bg-blue-100 text-blue-800' :\n                        test.type === 'Mid-term' ? 'bg-orange-100 text-orange-800' :\n                        test.type === 'Final' ? 'bg-red-100 text-red-800' :\n                        'bg-purple-100 text-purple-800'\n                      }`}>\n                        {test.type}\n                      </Badge>\n                    </div>\n                    <CardDescription>\n                      {test.subject} • {test.duration} • {test.maxMarks} marks\n                    </CardDescription>\n                  </div>\n                  <div className=\"flex flex-col items-end space-y-2\">\n                    <Badge className={`${\n                      upcoming ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {upcoming ? 'Upcoming' : 'Completed'}\n                    </Badge>\n                    <span className=\"text-sm text-gray-600\">{formatDate(test.date)}</span>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {!upcoming && (\n                    <>\n                      <div>\n                        <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n                          <span>Grading Progress</span>\n                          <span>{stats.gradedCount} / {stats.totalCount}</span>\n                        </div>\n                        <Progress value={stats.gradingProgress} className=\"h-2\" />\n                      </div>\n                      \n                      <div className=\"grid grid-cols-3 gap-4 text-center text-sm\">\n                        <div>\n                          <p className=\"font-semibold text-purple-600\">{stats.averageMarks}</p>\n                          <p className=\"text-gray-600\">Average</p>\n                        </div>\n                        <div>\n                          <p className=\"font-semibold text-green-600\">{stats.highestMarks}</p>\n                          <p className=\"text-gray-600\">Highest</p>\n                        </div>\n                        <div>\n                          <p className=\"font-semibold text-red-600\">{stats.lowestMarks}</p>\n                          <p className=\"text-gray-600\">Lowest</p>\n                        </div>\n                      </div>\n                    </>\n                  )}\n                  \n                  <div className=\"flex space-x-2\">\n                    <Button\n                      onClick={() => {\n                        setSelectedTest(test)\n                        setIsViewDialogOpen(true)\n                      }}\n                      variant=\"outline\"\n                      className=\"flex-1 border-purple-300 text-purple-700 hover:bg-purple-50\"\n                    >\n                      View Results\n                    </Button>\n                    {!upcoming && (\n                      <Button\n                        onClick={() => {\n                          setSelectedTest(test)\n                          setIsGradingDialogOpen(true)\n                        }}\n                        className=\"flex-1 bg-purple-600 hover:bg-purple-700\"\n                      >\n                        Grade Test\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )\n        })}\n      </div>\n\n      {tests.length === 0 && (\n        <Card className=\"text-center py-8\">\n          <CardContent>\n            <p className=\"text-gray-500\">No tests scheduled yet</p>\n            <p className=\"text-sm text-gray-400 mt-2\">Click \"Schedule Test\" to create your first test</p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* View Results Dialog */}\n      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>\n        <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>{selectedTest?.title} - Results</DialogTitle>\n            <DialogDescription>\n              Student performance and grade distribution\n            </DialogDescription>\n          </DialogHeader>\n          \n          {selectedTest && (\n            <div className=\"space-y-6\">\n              {/* Grade Distribution */}\n              <div>\n                <h3 className=\"font-semibold mb-3\">Grade Distribution</h3>\n                <div className=\"grid grid-cols-4 gap-2\">\n                  {Object.entries(getGradeDistribution(selectedTest)).map(([grade, count]) => (\n                    <div key={grade} className=\"text-center p-2 bg-gray-50 rounded\">\n                      <p className=\"font-bold text-lg\">{count}</p>\n                      <p className=\"text-sm text-gray-600\">{grade}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              {/* Student Results */}\n              <div>\n                <h3 className=\"font-semibold mb-3\">Student Results</h3>\n                <div className=\"space-y-2\">\n                  {selectedTest.studentMarks\n                    .sort((a, b) => (b.marks || 0) - (a.marks || 0))\n                    .map((studentMark) => (\n                    <div\n                      key={studentMark.studentId}\n                      className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n                    >\n                      <div>\n                        <p className=\"font-medium\">{studentMark.studentName}</p>\n                        <p className=\"text-sm text-gray-600\">Roll: {studentMark.rollNumber}</p>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-3\">\n                        {studentMark.marks !== undefined ? (\n                          <>\n                            <span className=\"font-semibold\">\n                              {studentMark.marks}/{selectedTest.maxMarks}\n                            </span>\n                            <Badge className={`${\n                              studentMark.grade === 'A+' || studentMark.grade === 'A' ? 'bg-green-100 text-green-800' :\n                              studentMark.grade === 'B+' || studentMark.grade === 'B' ? 'bg-blue-100 text-blue-800' :\n                              studentMark.grade === 'C+' || studentMark.grade === 'C' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-red-100 text-red-800'\n                            }`}>\n                              {studentMark.grade}\n                            </Badge>\n                          </>\n                        ) : (\n                          <Badge className=\"bg-gray-100 text-gray-800\">\n                            Not Graded\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Grading Dialog */}\n      <Dialog open={isGradingDialogOpen} onOpenChange={setIsGradingDialogOpen}>\n        <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Grade Test: {selectedTest?.title}</DialogTitle>\n            <DialogDescription>\n              Enter marks for each student\n            </DialogDescription>\n          </DialogHeader>\n          \n          {selectedTest && (\n            <div className=\"space-y-4\">\n              {selectedTest.studentMarks.map((studentMark) => (\n                <div\n                  key={studentMark.studentId}\n                  className=\"flex items-center justify-between p-3 border rounded-lg\"\n                >\n                  <div>\n                    <p className=\"font-medium\">{studentMark.studentName}</p>\n                    <p className=\"text-sm text-gray-600\">Roll: {studentMark.rollNumber}</p>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-3\">\n                    <Input\n                      type=\"number\"\n                      min=\"0\"\n                      max={selectedTest.maxMarks}\n                      value={studentMark.marks || ''}\n                      onChange={(e) => {\n                        const marks = parseInt(e.target.value)\n                        if (!isNaN(marks)) {\n                          updateStudentMark(selectedTest.id, studentMark.studentId, marks)\n                        }\n                      }}\n                      placeholder=\"Marks\"\n                      className=\"w-20\"\n                    />\n                    <span className=\"text-sm text-gray-600\">/ {selectedTest.maxMarks}</span>\n                    {studentMark.grade && (\n                      <Badge className=\"bg-purple-100 text-purple-800\">\n                        {studentMark.grade}\n                      </Badge>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      <style jsx global>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.5s ease-out both;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5517, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ClassSchedule.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Switch } from '@/components/ui/switch'\nimport { Textarea } from '@/components/ui/textarea'\n\ninterface ClassSession {\n  id: string\n  subject: string\n  topic: string\n  startTime: string\n  endTime: string\n  dayOfWeek: number // 0 = Sunday, 1 = Monday, etc.\n  classroom: string\n  type: 'Theory' | 'Lab' | 'Tutorial'\n  reminderEnabled: boolean\n  reminderMinutes: number\n}\n\ninterface Meeting {\n  id: string\n  title: string\n  description: string\n  date: string\n  time: string\n  location: string\n  type: 'Faculty Meeting' | 'Department Meeting' | 'Committee Meeting' | 'Other'\n  reminderEnabled: boolean\n}\n\nexport default function ClassSchedule() {\n  const [classes, setClasses] = useState<ClassSession[]>([])\n  const [meetings, setMeetings] = useState<Meeting[]>([])\n  const [selectedDay, setSelectedDay] = useState(new Date().getDay())\n  const [isAddClassDialogOpen, setIsAddClassDialogOpen] = useState(false)\n  const [isAddMeetingDialogOpen, setIsAddMeetingDialogOpen] = useState(false)\n  const [currentTime, setCurrentTime] = useState(new Date())\n  const [activeTab, setActiveTab] = useState<'schedule' | 'meetings'>('schedule')\n\n  const [newClass, setNewClass] = useState({\n    subject: 'Computer Science',\n    topic: '',\n    startTime: '09:00',\n    endTime: '10:00',\n    dayOfWeek: 1,\n    classroom: 'Room 101',\n    type: 'Theory' as const,\n    reminderEnabled: true,\n    reminderMinutes: 15\n  })\n\n  const [newMeeting, setNewMeeting] = useState({\n    title: '',\n    description: '',\n    date: '',\n    time: '10:00',\n    location: 'Conference Room',\n    type: 'Faculty Meeting' as const,\n    reminderEnabled: true\n  })\n\n  const daysOfWeek = [\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n  ]\n\n  useEffect(() => {\n    // Update current time every minute\n    const timer = setInterval(() => {\n      setCurrentTime(new Date())\n    }, 60000)\n\n    // Load sample data\n    const sampleClasses: ClassSession[] = [\n      {\n        id: '1',\n        subject: 'Computer Science',\n        topic: 'Data Structures',\n        startTime: '09:00',\n        endTime: '10:00',\n        dayOfWeek: 1, // Monday\n        classroom: 'Room 101',\n        type: 'Theory',\n        reminderEnabled: true,\n        reminderMinutes: 15\n      },\n      {\n        id: '2',\n        subject: 'Computer Science',\n        topic: 'Programming Lab',\n        startTime: '10:30',\n        endTime: '12:30',\n        dayOfWeek: 1, // Monday\n        classroom: 'Lab 1',\n        type: 'Lab',\n        reminderEnabled: true,\n        reminderMinutes: 10\n      },\n      {\n        id: '3',\n        subject: 'Mathematics',\n        topic: 'Calculus',\n        startTime: '14:00',\n        endTime: '15:00',\n        dayOfWeek: 1, // Monday\n        classroom: 'Room 203',\n        type: 'Theory',\n        reminderEnabled: false,\n        reminderMinutes: 15\n      },\n      {\n        id: '4',\n        subject: 'Computer Science',\n        topic: 'Algorithms',\n        startTime: '09:00',\n        endTime: '10:00',\n        dayOfWeek: 2, // Tuesday\n        classroom: 'Room 101',\n        type: 'Theory',\n        reminderEnabled: true,\n        reminderMinutes: 15\n      },\n      {\n        id: '5',\n        subject: 'Physics',\n        topic: 'Quantum Mechanics',\n        startTime: '11:00',\n        endTime: '12:00',\n        dayOfWeek: 2, // Tuesday\n        classroom: 'Room 301',\n        type: 'Theory',\n        reminderEnabled: true,\n        reminderMinutes: 20\n      }\n    ]\n\n    const sampleMeetings: Meeting[] = [\n      {\n        id: '1',\n        title: 'Department Faculty Meeting',\n        description: 'Monthly department meeting to discuss curriculum updates and student progress.',\n        date: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        time: '14:00',\n        location: 'Conference Room A',\n        type: 'Department Meeting',\n        reminderEnabled: true\n      },\n      {\n        id: '2',\n        title: 'Academic Committee Review',\n        description: 'Review of academic policies and examination procedures.',\n        date: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        time: '10:30',\n        location: 'Main Hall',\n        type: 'Committee Meeting',\n        reminderEnabled: true\n      }\n    ]\n\n    setClasses(sampleClasses)\n    setMeetings(sampleMeetings)\n\n    return () => clearInterval(timer)\n  }, [])\n\n  const handleAddClass = () => {\n    if (newClass.topic && newClass.startTime && newClass.endTime) {\n      const classSession: ClassSession = {\n        id: Date.now().toString(),\n        subject: newClass.subject,\n        topic: newClass.topic,\n        startTime: newClass.startTime,\n        endTime: newClass.endTime,\n        dayOfWeek: newClass.dayOfWeek,\n        classroom: newClass.classroom,\n        type: newClass.type,\n        reminderEnabled: newClass.reminderEnabled,\n        reminderMinutes: newClass.reminderMinutes\n      }\n      \n      setClasses([...classes, classSession])\n      setNewClass({\n        subject: 'Computer Science',\n        topic: '',\n        startTime: '09:00',\n        endTime: '10:00',\n        dayOfWeek: 1,\n        classroom: 'Room 101',\n        type: 'Theory',\n        reminderEnabled: true,\n        reminderMinutes: 15\n      })\n      setIsAddClassDialogOpen(false)\n    }\n  }\n\n  const handleAddMeeting = () => {\n    if (newMeeting.title && newMeeting.date && newMeeting.time) {\n      const meeting: Meeting = {\n        id: Date.now().toString(),\n        title: newMeeting.title,\n        description: newMeeting.description,\n        date: newMeeting.date,\n        time: newMeeting.time,\n        location: newMeeting.location,\n        type: newMeeting.type,\n        reminderEnabled: newMeeting.reminderEnabled\n      }\n      \n      setMeetings([...meetings, meeting])\n      setNewMeeting({\n        title: '',\n        description: '',\n        date: '',\n        time: '10:00',\n        location: 'Conference Room',\n        type: 'Faculty Meeting',\n        reminderEnabled: true\n      })\n      setIsAddMeetingDialogOpen(false)\n    }\n  }\n\n  const toggleClassReminder = (classId: string) => {\n    setClasses(classes.map(cls => \n      cls.id === classId \n        ? { ...cls, reminderEnabled: !cls.reminderEnabled }\n        : cls\n    ))\n  }\n\n  const toggleMeetingReminder = (meetingId: string) => {\n    setMeetings(meetings.map(meeting => \n      meeting.id === meetingId \n        ? { ...meeting, reminderEnabled: !meeting.reminderEnabled }\n        : meeting\n    ))\n  }\n\n  const getClassesForDay = (day: number) => {\n    return classes\n      .filter(cls => cls.dayOfWeek === day)\n      .sort((a, b) => a.startTime.localeCompare(b.startTime))\n  }\n\n  const getCurrentClass = () => {\n    const now = currentTime\n    const currentDay = now.getDay()\n    const currentTimeStr = now.toTimeString().slice(0, 5) // HH:MM format\n    \n    return classes.find(cls => \n      cls.dayOfWeek === currentDay &&\n      cls.startTime <= currentTimeStr &&\n      cls.endTime > currentTimeStr\n    )\n  }\n\n  const getNextClass = () => {\n    const now = currentTime\n    const currentDay = now.getDay()\n    const currentTimeStr = now.toTimeString().slice(0, 5)\n    \n    // Find next class today\n    const todayClasses = getClassesForDay(currentDay)\n    const nextToday = todayClasses.find(cls => cls.startTime > currentTimeStr)\n    \n    if (nextToday) return nextToday\n    \n    // Find next class in upcoming days\n    for (let i = 1; i <= 7; i++) {\n      const nextDay = (currentDay + i) % 7\n      const nextDayClasses = getClassesForDay(nextDay)\n      if (nextDayClasses.length > 0) {\n        return nextDayClasses[0]\n      }\n    }\n    \n    return null\n  }\n\n  const formatTime = (timeStr: string) => {\n    const [hours, minutes] = timeStr.split(':')\n    const hour = parseInt(hours)\n    const ampm = hour >= 12 ? 'PM' : 'AM'\n    const displayHour = hour % 12 || 12\n    return `${displayHour}:${minutes} ${ampm}`\n  }\n\n  const formatDate = (dateStr: string) => {\n    return new Date(dateStr).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    })\n  }\n\n  const currentClass = getCurrentClass()\n  const nextClass = getNextClass()\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold text-purple-800 mb-2\">Class Schedule & Meetings</h2>\n        <p className=\"text-purple-600\">Manage your daily schedule and meeting reminders</p>\n      </div>\n\n      {/* Current Status */}\n      <div className=\"grid grid-cols-1 gap-4\">\n        {currentClass && (\n          <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-3 h-3 bg-white rounded-full animate-pulse\"></div>\n                <div>\n                  <h3 className=\"font-semibold\">Currently Teaching</h3>\n                  <p className=\"text-sm opacity-90\">\n                    {currentClass.subject} - {currentClass.topic} ({currentClass.classroom})\n                  </p>\n                  <p className=\"text-xs opacity-75\">\n                    {formatTime(currentClass.startTime)} - {formatTime(currentClass.endTime)}\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {nextClass && !currentClass && (\n          <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-3 h-3 bg-white rounded-full\"></div>\n                <div>\n                  <h3 className=\"font-semibold\">Next Class</h3>\n                  <p className=\"text-sm opacity-90\">\n                    {nextClass.subject} - {nextClass.topic} ({nextClass.classroom})\n                  </p>\n                  <p className=\"text-xs opacity-75\">\n                    {daysOfWeek[nextClass.dayOfWeek]} at {formatTime(nextClass.startTime)}\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-2\">\n        <Button\n          onClick={() => setActiveTab('schedule')}\n          variant={activeTab === 'schedule' ? 'default' : 'outline'}\n          className={activeTab === 'schedule' ? 'bg-purple-600 hover:bg-purple-700' : 'border-purple-300 text-purple-700'}\n        >\n          Class Schedule\n        </Button>\n        <Button\n          onClick={() => setActiveTab('meetings')}\n          variant={activeTab === 'meetings' ? 'default' : 'outline'}\n          className={activeTab === 'meetings' ? 'bg-purple-600 hover:bg-purple-700' : 'border-purple-300 text-purple-700'}\n        >\n          Meetings\n        </Button>\n      </div>\n\n      {activeTab === 'schedule' && (\n        <div className=\"space-y-6\">\n          {/* Day Selector and Add Button */}\n          <div className=\"flex items-center justify-between\">\n            <Select value={selectedDay.toString()} onValueChange={(value) => setSelectedDay(parseInt(value))}>\n              <SelectTrigger className=\"w-48\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {daysOfWeek.map((day, index) => (\n                  <SelectItem key={index} value={index.toString()}>\n                    {day}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Dialog open={isAddClassDialogOpen} onOpenChange={setIsAddClassDialogOpen}>\n              <DialogTrigger asChild>\n                <Button className=\"bg-purple-600 hover:bg-purple-700\">\n                  Add Class\n                </Button>\n              </DialogTrigger>\n              <DialogContent className=\"max-w-md\">\n                <DialogHeader>\n                  <DialogTitle>Add New Class</DialogTitle>\n                  <DialogDescription>Schedule a new class session</DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"subject\">Subject</Label>\n                    <Select value={newClass.subject} onValueChange={(value) => setNewClass({...newClass, subject: value})}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Computer Science\">Computer Science</SelectItem>\n                        <SelectItem value=\"Mathematics\">Mathematics</SelectItem>\n                        <SelectItem value=\"Physics\">Physics</SelectItem>\n                        <SelectItem value=\"Chemistry\">Chemistry</SelectItem>\n                        <SelectItem value=\"English\">English</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"topic\">Topic</Label>\n                    <Input\n                      id=\"topic\"\n                      value={newClass.topic}\n                      onChange={(e) => setNewClass({...newClass, topic: e.target.value})}\n                      placeholder=\"Enter class topic\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"dayOfWeek\">Day</Label>\n                    <Select value={newClass.dayOfWeek.toString()} onValueChange={(value) => setNewClass({...newClass, dayOfWeek: parseInt(value)})}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {daysOfWeek.map((day, index) => (\n                          <SelectItem key={index} value={index.toString()}>\n                            {day}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"startTime\">Start Time</Label>\n                      <Input\n                        id=\"startTime\"\n                        type=\"time\"\n                        value={newClass.startTime}\n                        onChange={(e) => setNewClass({...newClass, startTime: e.target.value})}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"endTime\">End Time</Label>\n                      <Input\n                        id=\"endTime\"\n                        type=\"time\"\n                        value={newClass.endTime}\n                        onChange={(e) => setNewClass({...newClass, endTime: e.target.value})}\n                      />\n                    </div>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"classroom\">Classroom</Label>\n                    <Input\n                      id=\"classroom\"\n                      value={newClass.classroom}\n                      onChange={(e) => setNewClass({...newClass, classroom: e.target.value})}\n                      placeholder=\"Enter classroom\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"type\">Type</Label>\n                    <Select value={newClass.type} onValueChange={(value) => setNewClass({...newClass, type: value as any})}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Theory\">Theory</SelectItem>\n                        <SelectItem value=\"Lab\">Lab</SelectItem>\n                        <SelectItem value=\"Tutorial\">Tutorial</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"reminder\"\n                      checked={newClass.reminderEnabled}\n                      onCheckedChange={(checked) => setNewClass({...newClass, reminderEnabled: checked})}\n                    />\n                    <Label htmlFor=\"reminder\">Enable reminder</Label>\n                  </div>\n                  {newClass.reminderEnabled && (\n                    <div>\n                      <Label htmlFor=\"reminderMinutes\">Reminder (minutes before)</Label>\n                      <Input\n                        id=\"reminderMinutes\"\n                        type=\"number\"\n                        value={newClass.reminderMinutes}\n                        onChange={(e) => setNewClass({...newClass, reminderMinutes: parseInt(e.target.value)})}\n                      />\n                    </div>\n                  )}\n                  <Button onClick={handleAddClass} className=\"w-full bg-purple-600 hover:bg-purple-700\">\n                    Add Class\n                  </Button>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Classes for Selected Day */}\n          <div className=\"space-y-3\">\n            {getClassesForDay(selectedDay).map((classSession, index) => (\n              <Card\n                key={classSession.id}\n                className=\"shadow-md hover:shadow-lg transition-all duration-300 animate-fade-in\"\n                style={{ animationDelay: `${index * 0.1}s` }}\n              >\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-2 mb-2\">\n                        <h3 className=\"font-semibold text-lg\">{classSession.subject}</h3>\n                        <Badge className={`${\n                          classSession.type === 'Theory' ? 'bg-blue-100 text-blue-800' :\n                          classSession.type === 'Lab' ? 'bg-green-100 text-green-800' :\n                          'bg-purple-100 text-purple-800'\n                        }`}>\n                          {classSession.type}\n                        </Badge>\n                      </div>\n                      <p className=\"text-gray-700 mb-1\">{classSession.topic}</p>\n                      <p className=\"text-sm text-gray-600\">\n                        {formatTime(classSession.startTime)} - {formatTime(classSession.endTime)}\n                      </p>\n                      <p className=\"text-sm text-gray-600\">{classSession.classroom}</p>\n                    </div>\n                    \n                    <div className=\"flex flex-col items-end space-y-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-xs text-gray-500\">Reminder</span>\n                        <Switch\n                          checked={classSession.reminderEnabled}\n                          onCheckedChange={() => toggleClassReminder(classSession.id)}\n                        />\n                      </div>\n                      {classSession.reminderEnabled && (\n                        <span className=\"text-xs text-gray-500\">\n                          {classSession.reminderMinutes} min before\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {getClassesForDay(selectedDay).length === 0 && (\n            <Card className=\"text-center py-8\">\n              <CardContent>\n                <p className=\"text-gray-500\">No classes scheduled for {daysOfWeek[selectedDay]}</p>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'meetings' && (\n        <div className=\"space-y-6\">\n          {/* Add Meeting Button */}\n          <div className=\"flex justify-end\">\n            <Dialog open={isAddMeetingDialogOpen} onOpenChange={setIsAddMeetingDialogOpen}>\n              <DialogTrigger asChild>\n                <Button className=\"bg-purple-600 hover:bg-purple-700\">\n                  Schedule Meeting\n                </Button>\n              </DialogTrigger>\n              <DialogContent className=\"max-w-md\">\n                <DialogHeader>\n                  <DialogTitle>Schedule New Meeting</DialogTitle>\n                  <DialogDescription>Add a new meeting to your calendar</DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"title\">Meeting Title</Label>\n                    <Input\n                      id=\"title\"\n                      value={newMeeting.title}\n                      onChange={(e) => setNewMeeting({...newMeeting, title: e.target.value})}\n                      placeholder=\"Enter meeting title\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"description\">Description</Label>\n                    <Textarea\n                      id=\"description\"\n                      value={newMeeting.description}\n                      onChange={(e) => setNewMeeting({...newMeeting, description: e.target.value})}\n                      placeholder=\"Enter meeting description\"\n                      rows={3}\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"date\">Date</Label>\n                      <Input\n                        id=\"date\"\n                        type=\"date\"\n                        value={newMeeting.date}\n                        onChange={(e) => setNewMeeting({...newMeeting, date: e.target.value})}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"time\">Time</Label>\n                      <Input\n                        id=\"time\"\n                        type=\"time\"\n                        value={newMeeting.time}\n                        onChange={(e) => setNewMeeting({...newMeeting, time: e.target.value})}\n                      />\n                    </div>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"location\">Location</Label>\n                    <Input\n                      id=\"location\"\n                      value={newMeeting.location}\n                      onChange={(e) => setNewMeeting({...newMeeting, location: e.target.value})}\n                      placeholder=\"Enter meeting location\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"type\">Meeting Type</Label>\n                    <Select value={newMeeting.type} onValueChange={(value) => setNewMeeting({...newMeeting, type: value as any})}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Faculty Meeting\">Faculty Meeting</SelectItem>\n                        <SelectItem value=\"Department Meeting\">Department Meeting</SelectItem>\n                        <SelectItem value=\"Committee Meeting\">Committee Meeting</SelectItem>\n                        <SelectItem value=\"Other\">Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"meetingReminder\"\n                      checked={newMeeting.reminderEnabled}\n                      onCheckedChange={(checked) => setNewMeeting({...newMeeting, reminderEnabled: checked})}\n                    />\n                    <Label htmlFor=\"meetingReminder\">Enable reminder</Label>\n                  </div>\n                  <Button onClick={handleAddMeeting} className=\"w-full bg-purple-600 hover:bg-purple-700\">\n                    Schedule Meeting\n                  </Button>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Upcoming Meetings */}\n          <div className=\"space-y-4\">\n            {meetings\n              .filter(meeting => meeting.date >= new Date().toISOString().split('T')[0])\n              .sort((a, b) => {\n                const dateCompare = a.date.localeCompare(b.date)\n                if (dateCompare === 0) {\n                  return a.time.localeCompare(b.time)\n                }\n                return dateCompare\n              })\n              .map((meeting, index) => (\n                <Card\n                  key={meeting.id}\n                  className=\"shadow-md hover:shadow-lg transition-all duration-300 animate-fade-in\"\n                  style={{ animationDelay: `${index * 0.1}s` }}\n                >\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          <h3 className=\"font-semibold text-lg\">{meeting.title}</h3>\n                          <Badge className={`${\n                            meeting.type === 'Faculty Meeting' ? 'bg-blue-100 text-blue-800' :\n                            meeting.type === 'Department Meeting' ? 'bg-green-100 text-green-800' :\n                            meeting.type === 'Committee Meeting' ? 'bg-purple-100 text-purple-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {meeting.type}\n                          </Badge>\n                        </div>\n                        {meeting.description && (\n                          <p className=\"text-gray-700 mb-2\">{meeting.description}</p>\n                        )}\n                        <div className=\"space-y-1 text-sm text-gray-600\">\n                          <p>{formatDate(meeting.date)} at {formatTime(meeting.time)}</p>\n                          <p>{meeting.location}</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-xs text-gray-500\">Reminder</span>\n                        <Switch\n                          checked={meeting.reminderEnabled}\n                          onCheckedChange={() => toggleMeetingReminder(meeting.id)}\n                        />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n          </div>\n\n          {meetings.filter(meeting => meeting.date >= new Date().toISOString().split('T')[0]).length === 0 && (\n            <Card className=\"text-center py-8\">\n              <CardContent>\n                <p className=\"text-gray-500\">No upcoming meetings scheduled</p>\n                <p className=\"text-sm text-gray-400 mt-2\">Click \"Schedule Meeting\" to add a new meeting</p>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      )}\n\n      <style jsx global>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.5s ease-out both;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7261, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/LeaveRequest.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Calendar } from '@/components/ui/calendar'\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\n\ninterface LeaveRequest {\n  id: string\n  facultyID: string\n  fromDate: string\n  toDate: string\n  reason: string\n  type: 'Sick Leave' | 'Casual Leave' | 'Emergency Leave' | 'Personal Leave' | 'Other'\n  status: 'Pending' | 'Approved' | 'Rejected'\n  appliedDate: string\n  approvedBy?: string\n  approvedDate?: string\n  rejectionReason?: string\n  documents?: string[]\n}\n\nexport default function LeaveRequest() {\n  const [leaveRequests, setLeaveRequests] = useState<LeaveRequest[]>([])\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false)\n  const [selectedRequest, setSelectedRequest] = useState<LeaveRequest | null>(null)\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false)\n  const [filterStatus, setFilterStatus] = useState<string>('all')\n  const [fromDate, setFromDate] = useState<Date>()\n  const [toDate, setToDate] = useState<Date>()\n\n  const [newRequest, setNewRequest] = useState({\n    fromDate: '',\n    toDate: '',\n    reason: '',\n    type: 'Casual Leave' as const\n  })\n\n  useEffect(() => {\n    // Load sample leave requests\n    const sampleRequests: LeaveRequest[] = [\n      {\n        id: '1',\n        facultyID: 'F001',\n        fromDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 7 days from now\n        toDate: new Date(Date.now() + 9 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 9 days from now\n        reason: 'Family wedding ceremony',\n        type: 'Personal Leave',\n        status: 'Pending',\n        appliedDate: new Date().toISOString().split('T')[0]\n      },\n      {\n        id: '2',\n        facultyID: 'F001',\n        fromDate: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 14 days ago\n        toDate: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 12 days ago\n        reason: 'Medical checkup and treatment',\n        type: 'Sick Leave',\n        status: 'Approved',\n        appliedDate: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        approvedBy: 'Dr. Smith (HOD)',\n        approvedDate: new Date(Date.now() - 18 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n      },\n      {\n        id: '3',\n        facultyID: 'F001',\n        fromDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 30 days ago\n        toDate: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 25 days ago\n        reason: 'Personal vacation - insufficient notice',\n        type: 'Casual Leave',\n        status: 'Rejected',\n        appliedDate: new Date(Date.now() - 32 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        rejectionReason: 'Insufficient advance notice. Please apply at least 7 days in advance for casual leave.'\n      },\n      {\n        id: '4',\n        facultyID: 'F001',\n        fromDate: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 60 days ago\n        toDate: new Date(Date.now() - 58 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 58 days ago\n        reason: 'Conference attendance - International AI Symposium',\n        type: 'Other',\n        status: 'Approved',\n        appliedDate: new Date(Date.now() - 75 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        approvedBy: 'Dr. Johnson (Principal)',\n        approvedDate: new Date(Date.now() - 70 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n      }\n    ]\n    setLeaveRequests(sampleRequests)\n  }, [])\n\n  const handleSubmitRequest = () => {\n    if (newRequest.fromDate && newRequest.toDate && newRequest.reason) {\n      const request: LeaveRequest = {\n        id: Date.now().toString(),\n        facultyID: 'F001',\n        fromDate: newRequest.fromDate,\n        toDate: newRequest.toDate,\n        reason: newRequest.reason,\n        type: newRequest.type,\n        status: 'Pending',\n        appliedDate: new Date().toISOString().split('T')[0]\n      }\n      \n      setLeaveRequests([request, ...leaveRequests])\n      setNewRequest({\n        fromDate: '',\n        toDate: '',\n        reason: '',\n        type: 'Casual Leave'\n      })\n      setIsAddDialogOpen(false)\n    }\n  }\n\n  const getFilteredRequests = () => {\n    let filtered = leaveRequests\n\n    if (filterStatus !== 'all') {\n      filtered = filtered.filter(request => request.status.toLowerCase() === filterStatus)\n    }\n\n    return filtered.sort((a, b) => new Date(b.appliedDate).getTime() - new Date(a.appliedDate).getTime())\n  }\n\n  const getStatusStats = () => {\n    const stats = {\n      total: leaveRequests.length,\n      pending: leaveRequests.filter(r => r.status === 'Pending').length,\n      approved: leaveRequests.filter(r => r.status === 'Approved').length,\n      rejected: leaveRequests.filter(r => r.status === 'Rejected').length\n    }\n    return stats\n  }\n\n  const calculateLeaveDays = (fromDate: string, toDate: string) => {\n    const start = new Date(fromDate)\n    const end = new Date(toDate)\n    const diffTime = Math.abs(end.getTime() - start.getTime())\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1\n    return diffDays\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'Pending':\n        return 'bg-yellow-100 text-yellow-800'\n      case 'Approved':\n        return 'bg-green-100 text-green-800'\n      case 'Rejected':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'Sick Leave':\n        return 'bg-red-100 text-red-800'\n      case 'Casual Leave':\n        return 'bg-blue-100 text-blue-800'\n      case 'Emergency Leave':\n        return 'bg-orange-100 text-orange-800'\n      case 'Personal Leave':\n        return 'bg-purple-100 text-purple-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const stats = getStatusStats()\n  const filteredRequests = getFilteredRequests()\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-purple-800\">Leave Requests</h2>\n          <p className=\"text-purple-600\">Apply for leave and track your request status</p>\n        </div>\n        <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"bg-purple-600 hover:bg-purple-700\">\n              Apply for Leave\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-md\">\n            <DialogHeader>\n              <DialogTitle>Apply for Leave</DialogTitle>\n              <DialogDescription>\n                Submit a new leave request\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"type\">Leave Type</Label>\n                <Select value={newRequest.type} onValueChange={(value) => setNewRequest({...newRequest, type: value as any})}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Casual Leave\">Casual Leave</SelectItem>\n                    <SelectItem value=\"Sick Leave\">Sick Leave</SelectItem>\n                    <SelectItem value=\"Emergency Leave\">Emergency Leave</SelectItem>\n                    <SelectItem value=\"Personal Leave\">Personal Leave</SelectItem>\n                    <SelectItem value=\"Other\">Other</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"fromDate\">From Date</Label>\n                  <Input\n                    id=\"fromDate\"\n                    type=\"date\"\n                    value={newRequest.fromDate}\n                    onChange={(e) => setNewRequest({...newRequest, fromDate: e.target.value})}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"toDate\">To Date</Label>\n                  <Input\n                    id=\"toDate\"\n                    type=\"date\"\n                    value={newRequest.toDate}\n                    onChange={(e) => setNewRequest({...newRequest, toDate: e.target.value})}\n                  />\n                </div>\n              </div>\n              {newRequest.fromDate && newRequest.toDate && (\n                <div className=\"text-sm text-gray-600 bg-gray-50 p-2 rounded\">\n                  Duration: {calculateLeaveDays(newRequest.fromDate, newRequest.toDate)} day(s)\n                </div>\n              )}\n              <div>\n                <Label htmlFor=\"reason\">Reason</Label>\n                <Textarea\n                  id=\"reason\"\n                  value={newRequest.reason}\n                  onChange={(e) => setNewRequest({...newRequest, reason: e.target.value})}\n                  placeholder=\"Enter reason for leave\"\n                  rows={4}\n                />\n              </div>\n              <Button onClick={handleSubmitRequest} className=\"w-full bg-purple-600 hover:bg-purple-700\">\n                Submit Request\n              </Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{stats.total}</p>\n            <p className=\"text-sm opacity-90\">Total Requests</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-gradient-to-r from-yellow-500 to-yellow-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{stats.pending}</p>\n            <p className=\"text-sm opacity-90\">Pending</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{stats.approved}</p>\n            <p className=\"text-sm opacity-90\">Approved</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-gradient-to-r from-red-500 to-red-600 text-white\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold\">{stats.rejected}</p>\n            <p className=\"text-sm opacity-90\">Rejected</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filter */}\n      <div className=\"flex items-center space-x-4\">\n        <Label htmlFor=\"filter\">Filter by status:</Label>\n        <Select value={filterStatus} onValueChange={setFilterStatus}>\n          <SelectTrigger className=\"w-48\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Requests</SelectItem>\n            <SelectItem value=\"pending\">Pending</SelectItem>\n            <SelectItem value=\"approved\">Approved</SelectItem>\n            <SelectItem value=\"rejected\">Rejected</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Leave Requests List */}\n      <div className=\"space-y-4\">\n        {filteredRequests.map((request, index) => (\n          <Card\n            key={request.id}\n            className=\"shadow-md hover:shadow-lg transition-all duration-300 animate-fade-in\"\n            style={{ animationDelay: `${index * 0.1}s` }}\n          >\n            <CardContent className=\"p-4\">\n              <div className=\"flex justify-between items-start mb-3\">\n                <div className=\"flex items-center space-x-2\">\n                  <Badge className={getTypeColor(request.type)}>\n                    {request.type}\n                  </Badge>\n                  <Badge className={getStatusColor(request.status)}>\n                    {request.status}\n                  </Badge>\n                </div>\n                <span className=\"text-sm text-gray-500\">\n                  Applied: {formatDate(request.appliedDate)}\n                </span>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-medium text-gray-700\">Duration:</span>\n                  <span className=\"text-gray-600\">\n                    {formatDate(request.fromDate)} to {formatDate(request.toDate)}\n                    <span className=\"ml-2 text-sm text-purple-600\">\n                      ({calculateLeaveDays(request.fromDate, request.toDate)} days)\n                    </span>\n                  </span>\n                </div>\n\n                <div>\n                  <span className=\"font-medium text-gray-700\">Reason:</span>\n                  <p className=\"text-gray-600 mt-1\">{request.reason}</p>\n                </div>\n\n                {request.status === 'Approved' && request.approvedBy && (\n                  <div className=\"bg-green-50 p-3 rounded-lg\">\n                    <p className=\"text-sm text-green-800\">\n                      <span className=\"font-medium\">Approved by:</span> {request.approvedBy}\n                    </p>\n                    {request.approvedDate && (\n                      <p className=\"text-sm text-green-700\">\n                        <span className=\"font-medium\">Approved on:</span> {formatDate(request.approvedDate)}\n                      </p>\n                    )}\n                  </div>\n                )}\n\n                {request.status === 'Rejected' && request.rejectionReason && (\n                  <div className=\"bg-red-50 p-3 rounded-lg\">\n                    <p className=\"text-sm text-red-800\">\n                      <span className=\"font-medium\">Rejection Reason:</span>\n                    </p>\n                    <p className=\"text-sm text-red-700 mt-1\">{request.rejectionReason}</p>\n                  </div>\n                )}\n\n                {request.status === 'Pending' && (\n                  <div className=\"bg-yellow-50 p-3 rounded-lg\">\n                    <p className=\"text-sm text-yellow-800\">\n                      Your leave request is under review. You will be notified once it's processed.\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"mt-4 flex justify-end\">\n                <Button\n                  onClick={() => {\n                    setSelectedRequest(request)\n                    setIsViewDialogOpen(true)\n                  }}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"border-purple-300 text-purple-700 hover:bg-purple-50\"\n                >\n                  View Details\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {filteredRequests.length === 0 && (\n        <Card className=\"text-center py-8\">\n          <CardContent>\n            <p className=\"text-gray-500\">\n              {filterStatus === 'all' \n                ? 'No leave requests found' \n                : `No ${filterStatus} leave requests found`\n              }\n            </p>\n            <p className=\"text-sm text-gray-400 mt-2\">\n              Click \"Apply for Leave\" to submit your first request\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* View Details Dialog */}\n      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Leave Request Details</DialogTitle>\n            <DialogDescription>\n              Complete information about your leave request\n            </DialogDescription>\n          </DialogHeader>\n          \n          {selectedRequest && (\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Request ID:</span>\n                <span className=\"text-gray-600\">#{selectedRequest.id}</span>\n              </div>\n              \n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Type:</span>\n                <Badge className={getTypeColor(selectedRequest.type)}>\n                  {selectedRequest.type}\n                </Badge>\n              </div>\n              \n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Status:</span>\n                <Badge className={getStatusColor(selectedRequest.status)}>\n                  {selectedRequest.status}\n                </Badge>\n              </div>\n              \n              <div>\n                <span className=\"font-medium\">Duration:</span>\n                <p className=\"text-gray-600 mt-1\">\n                  {formatDate(selectedRequest.fromDate)} to {formatDate(selectedRequest.toDate)}\n                  <span className=\"ml-2 text-purple-600\">\n                    ({calculateLeaveDays(selectedRequest.fromDate, selectedRequest.toDate)} days)\n                  </span>\n                </p>\n              </div>\n              \n              <div>\n                <span className=\"font-medium\">Reason:</span>\n                <p className=\"text-gray-600 mt-1 bg-gray-50 p-2 rounded\">\n                  {selectedRequest.reason}\n                </p>\n              </div>\n              \n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Applied Date:</span>\n                <span className=\"text-gray-600\">{formatDate(selectedRequest.appliedDate)}</span>\n              </div>\n              \n              {selectedRequest.approvedBy && (\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-medium\">Approved By:</span>\n                  <span className=\"text-gray-600\">{selectedRequest.approvedBy}</span>\n                </div>\n              )}\n              \n              {selectedRequest.approvedDate && (\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-medium\">Approved Date:</span>\n                  <span className=\"text-gray-600\">{formatDate(selectedRequest.approvedDate)}</span>\n                </div>\n              )}\n              \n              {selectedRequest.rejectionReason && (\n                <div>\n                  <span className=\"font-medium text-red-700\">Rejection Reason:</span>\n                  <p className=\"text-red-600 mt-1 bg-red-50 p-2 rounded\">\n                    {selectedRequest.rejectionReason}\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      <style jsx global>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.5s ease-out both;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8584, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Dashboard.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport StudentManagement from './StudentManagement'\nimport AttendanceSystem from './AttendanceSystem'\nimport AssignmentTracker from './AssignmentTracker'\nimport TestTracker from './TestTracker'\nimport ClassSchedule from './ClassSchedule'\nimport LeaveRequest from './LeaveRequest'\n\ninterface DashboardProps {\n  onLogout: () => void\n}\n\nexport default function Dashboard({ onLogout }: DashboardProps) {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  const [dayOrder, setDayOrder] = useState(1)\n  const [activeTab, setActiveTab] = useState('dashboard')\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date())\n    }, 1000)\n\n    // Calculate day order based on current date\n    const today = new Date()\n    const dayOfWeek = today.getDay()\n    setDayOrder(dayOfWeek === 0 ? 6 : dayOfWeek)\n\n    return () => clearInterval(timer)\n  }, [])\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: true\n    })\n  }\n\n  const formatDate = (date: Date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })\n  }\n\n  const quickStats = [\n    { label: 'Total Students', value: '156', color: 'bg-blue-500' },\n    { label: 'Pending Assignments', value: '8', color: 'bg-orange-500' },\n    { label: 'Tests This Week', value: '3', color: 'bg-green-500' },\n    { label: 'Attendance Rate', value: '94%', color: 'bg-purple-500' }\n  ]\n\n  const upcomingTasks = [\n    { task: 'Grade Assignment 3', due: 'Today, 5:00 PM', priority: 'high' },\n    { task: 'Prepare Test Questions', due: 'Tomorrow, 10:00 AM', priority: 'medium' },\n    { task: 'Faculty Meeting', due: 'Friday, 2:00 PM', priority: 'low' },\n    { task: 'Submit Attendance Report', due: 'Monday, 9:00 AM', priority: 'medium' }\n  ]\n\n  if (activeTab !== 'dashboard') {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-white\">\n        <div className=\"sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-purple-200\">\n          <div className=\"flex items-center justify-between p-4\">\n            <Button\n              onClick={() => setActiveTab('dashboard')}\n              variant=\"ghost\"\n              className=\"text-purple-700 hover:text-purple-800 hover:bg-purple-100\"\n            >\n              ← Back to Dashboard\n            </Button>\n            <Button\n              onClick={onLogout}\n              variant=\"outline\"\n              className=\"border-purple-300 text-purple-700 hover:bg-purple-100\"\n            >\n              Logout\n            </Button>\n          </div>\n        </div>\n        \n        <div className=\"p-4\">\n          {activeTab === 'students' && <StudentManagement />}\n          {activeTab === 'attendance' && <AttendanceSystem />}\n          {activeTab === 'assignments' && <AssignmentTracker />}\n          {activeTab === 'tests' && <TestTracker />}\n          {activeTab === 'schedule' && <ClassSchedule />}\n          {activeTab === 'leave' && <LeaveRequest />}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-white\">\n      {/* Header */}\n      <div className=\"sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-purple-200\">\n        <div className=\"flex items-center justify-between p-4\">\n          <div>\n            <h1 className=\"text-xl font-bold text-purple-800\">Faculty Dashboard</h1>\n            <p className=\"text-sm text-purple-600\">{formatDate(currentTime)}</p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"text-right\">\n              <p className=\"text-lg font-semibold text-purple-800\">{formatTime(currentTime)}</p>\n              <Badge className=\"bg-purple-100 text-purple-800 hover:bg-purple-200\">\n                Day {dayOrder}\n              </Badge>\n            </div>\n            <Button\n              onClick={onLogout}\n              variant=\"outline\"\n              className=\"border-purple-300 text-purple-700 hover:bg-purple-100\"\n            >\n              Logout\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"p-4 space-y-6\">\n        {/* Morning Reminder */}\n        <Card className=\"bg-gradient-to-r from-purple-600 to-purple-700 text-white shadow-lg animate-pulse-slow\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-yellow-400 rounded-full animate-ping\"></div>\n              <div>\n                <h3 className=\"font-semibold\">Daily Reminder</h3>\n                <p className=\"text-sm opacity-90\">You have 3 classes today and 2 pending assignments to review</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          {quickStats.map((stat, index) => (\n            <Card key={index} className=\"shadow-md hover:shadow-lg transition-all duration-300 transform hover:scale-105\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${stat.color}`}></div>\n                  <div>\n                    <p className=\"text-2xl font-bold text-gray-800\">{stat.value}</p>\n                    <p className=\"text-sm text-gray-600\">{stat.label}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Upcoming Tasks */}\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-purple-800\">Upcoming Tasks</CardTitle>\n            <CardDescription>Your schedule for the next few days</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {upcomingTasks.map((task, index) => (\n              <div\n                key={index}\n                className=\"flex items-center justify-between p-3 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors duration-200\"\n              >\n                <div>\n                  <p className=\"font-medium text-gray-800\">{task.task}</p>\n                  <p className=\"text-sm text-gray-600\">{task.due}</p>\n                </div>\n                <Badge\n                  className={`${\n                    task.priority === 'high'\n                      ? 'bg-red-100 text-red-800'\n                      : task.priority === 'medium'\n                      ? 'bg-yellow-100 text-yellow-800'\n                      : 'bg-green-100 text-green-800'\n                  }`}\n                >\n                  {task.priority}\n                </Badge>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Quick Actions */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <Button\n            onClick={() => setActiveTab('students')}\n            className=\"h-16 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white shadow-lg transform transition-all duration-200 hover:scale-105 active:scale-95\"\n          >\n            <div className=\"text-center\">\n              <p className=\"font-semibold\">Students</p>\n              <p className=\"text-xs opacity-90\">Manage student data</p>\n            </div>\n          </Button>\n          \n          <Button\n            onClick={() => setActiveTab('attendance')}\n            className=\"h-16 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white shadow-lg transform transition-all duration-200 hover:scale-105 active:scale-95\"\n          >\n            <div className=\"text-center\">\n              <p className=\"font-semibold\">Attendance</p>\n              <p className=\"text-xs opacity-90\">Mark attendance</p>\n            </div>\n          </Button>\n          \n          <Button\n            onClick={() => setActiveTab('assignments')}\n            className=\"h-16 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white shadow-lg transform transition-all duration-200 hover:scale-105 active:scale-95\"\n          >\n            <div className=\"text-center\">\n              <p className=\"font-semibold\">Assignments</p>\n              <p className=\"text-xs opacity-90\">Track submissions</p>\n            </div>\n          </Button>\n          \n          <Button\n            onClick={() => setActiveTab('tests')}\n            className=\"h-16 bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white shadow-lg transform transition-all duration-200 hover:scale-105 active:scale-95\"\n          >\n            <div className=\"text-center\">\n              <p className=\"font-semibold\">Tests</p>\n              <p className=\"text-xs opacity-90\">Manage test scores</p>\n            </div>\n          </Button>\n        </div>\n\n        {/* Additional Actions */}\n        <div className=\"grid grid-cols-1 gap-4\">\n          <Button\n            onClick={() => setActiveTab('schedule')}\n            variant=\"outline\"\n            className=\"h-12 border-purple-300 text-purple-700 hover:bg-purple-100\"\n          >\n            Class Schedule & Reminders\n          </Button>\n          \n          <Button\n            onClick={() => setActiveTab('leave')}\n            variant=\"outline\"\n            className=\"h-12 border-purple-300 text-purple-700 hover:bg-purple-100\"\n          >\n            Leave Requests\n          </Button>\n        </div>\n      </div>\n\n      <style jsx global>{`\n        @keyframes pulse-slow {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.8; }\n        }\n        \n        .animate-pulse-slow {\n          animation: pulse-slow 3s ease-in-out infinite;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9272, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport Dashboard from '@/components/Dashboard'\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [showLogin, setShowLogin] = useState(true)\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const savedUser = localStorage.getItem('facultyUser')\n    if (savedUser) {\n      setIsLoggedIn(true)\n      setShowLogin(false)\n    }\n  }, [])\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setError('')\n\n    // Simulate API call\n    setTimeout(() => {\n      if (username === 'faculty' && password === 'password123') {\n        localStorage.setItem('facultyUser', JSON.stringify({ username, facultyID: 'F001' }))\n        setIsLoggedIn(true)\n        setShowLogin(false)\n      } else {\n        setError('Invalid username or password')\n      }\n      setIsLoading(false)\n    }, 1000)\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('facultyUser')\n    setIsLoggedIn(false)\n    setShowLogin(true)\n    setUsername('')\n    setPassword('')\n  }\n\n  if (isLoggedIn && !showLogin) {\n    return <Dashboard onLogout={handleLogout} />\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-100 via-purple-50 to-white\">\n      <div className=\"w-full max-w-md\">\n        {/* App Logo/Title */}\n        <div className=\"text-center mb-8 animate-fade-in\">\n          <div className=\"w-20 h-20 bg-gradient-to-br from-purple-600 to-purple-800 rounded-full mx-auto mb-4 flex items-center justify-center shadow-lg\">\n            <span className=\"text-white text-2xl font-bold\">FM</span>\n          </div>\n          <h1 className=\"text-3xl font-bold text-purple-800 mb-2\">Faculty Manager</h1>\n          <p className=\"text-purple-600\">Streamline your classroom management</p>\n        </div>\n\n        {/* Login Card */}\n        <Card className=\"shadow-2xl border-0 bg-white/80 backdrop-blur-sm animate-slide-up\">\n          <CardHeader className=\"text-center pb-4\">\n            <CardTitle className=\"text-2xl font-semibold text-purple-800\">Welcome Back</CardTitle>\n            <CardDescription className=\"text-purple-600\">\n              Sign in to access your dashboard\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleLogin} className=\"space-y-6\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"username\" className=\"text-purple-700 font-medium\">Username</Label>\n                <Input\n                  id=\"username\"\n                  type=\"text\"\n                  placeholder=\"Enter your username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  className=\"border-purple-200 focus:border-purple-500 focus:ring-purple-500 h-12\"\n                  required\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\" className=\"text-purple-700 font-medium\">Password</Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"border-purple-200 focus:border-purple-500 focus:ring-purple-500 h-12\"\n                  required\n                />\n              </div>\n\n              {error && (\n                <Alert className=\"border-red-200 bg-red-50 animate-shake\">\n                  <AlertDescription className=\"text-red-700\">\n                    {error}\n                  </AlertDescription>\n                </Alert>\n              )}\n\n              <Button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full h-12 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white font-semibold rounded-lg shadow-lg transform transition-all duration-200 hover:scale-105 active:scale-95\"\n              >\n                {isLoading ? (\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                    <span>Signing in...</span>\n                  </div>\n                ) : (\n                  'Sign In'\n                )}\n              </Button>\n            </form>\n\n            {/* Demo Credentials */}\n            <div className=\"mt-6 p-4 bg-purple-50 rounded-lg border border-purple-200\">\n              <p className=\"text-sm text-purple-700 font-medium mb-2\">Demo Credentials:</p>\n              <p className=\"text-xs text-purple-600\">Username: faculty</p>\n              <p className=\"text-xs text-purple-600\">Password: password123</p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className=\"text-center mt-8 text-purple-600 text-sm\">\n          <p>© 2024 Faculty Management System</p>\n        </div>\n      </div>\n\n      <style jsx global>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(-20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        @keyframes slide-up {\n          from { opacity: 0; transform: translateY(30px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        @keyframes shake {\n          0%, 100% { transform: translateX(0); }\n          25% { transform: translateX(-5px); }\n          75% { transform: translateX(5px); }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.8s ease-out;\n        }\n        \n        .animate-slide-up {\n          animation: slide-up 0.6s ease-out 0.2s both;\n        }\n        \n        .animate-shake {\n          animation: shake 0.5s ease-in-out;\n        }\n        \n        .font-poppins {\n          font-family: 'Poppins', sans-serif;\n        }\n      `}</style>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}